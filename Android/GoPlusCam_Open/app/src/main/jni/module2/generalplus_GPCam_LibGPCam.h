/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class generalplus_GPCam_LibGPCam */

#ifndef _Included_generalplus_GPCam_LibGPCam
#define _Included_generalplus_GPCam_LibGPCam
#ifdef __cplusplus
extern "C" {
#endif

#include <unistd.h>
#include <string.h>

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamConnectToDevice
 * Signature: ([Ljava/lang/Byte;I)I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamConnectToDevice
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamDisconnect
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamDisconnect
  (JNIEnv *, jclass);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSetDownloadPath
 * Signature: ([Ljava/lang/Byte;)V
 */
JNIEXPORT void JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSetDownloadPath
  (JNIEnv *, jclass, jstring);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamAbort
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamAbort
  (JNIEnv *, jclass, jint);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendSetMode
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendSetMode
  (JNIEnv *, jclass, jint);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendGetSetPIP
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendGetSetPIP
  (JNIEnv *, jclass, jint);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendGetStatus
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendGetStatus
  (JNIEnv *, jclass);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendGetParameterFile
 * Signature: ([Ljava/lang/Byte;)I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendGetParameterFile
  (JNIEnv *, jclass, jstring);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendPowerOff
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendPowerOff
  (JNIEnv *, jclass);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendRestartStreaming
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendRestartStreaming
  (JNIEnv *, jclass);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendRecordCmd
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendRecordCmd
  (JNIEnv *, jclass);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendAudioOnOff
 * Signature: (Z)I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendAudioOnOff
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendCapturePicture
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendCapturePicture
  (JNIEnv *, jclass);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendStartPlayback
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendStartPlayback
  (JNIEnv *, jclass, jint);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendPausePlayback
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendPausePlayback
  (JNIEnv *, jclass);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendGetFullFileList
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendGetFullFileList
  (JNIEnv *, jclass);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendGetFileThumbnail
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendGetFileThumbnail
  (JNIEnv *, jclass, jint);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendGetFileRawdata
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendGetFileRawdata
  (JNIEnv *, jclass, jint);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendStopPlayback
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendStopPlayback
  (JNIEnv *, jclass);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSetNextPlaybackFileListIndex
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSetNextPlaybackFileListIndex
        (JNIEnv *, jclass, jint);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendDeleteFile
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendDeleteFile
        (JNIEnv *, jclass, jint);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendGetParameter
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendGetParameter
  (JNIEnv *, jclass, jint);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendSetParameter
 * Signature: (II[Ljava/lang/Byte;)I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendSetParameter
  (JNIEnv *, jclass, jint, jint, jbyteArray);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendFirmwareDownload
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendFirmwareDownload(
        JNIEnv *env, jclass obj, jlong ui32FileSize , jlong ui32CheckSum);
/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendFirmwareRawData
 * Signature: (J[Ljava/lang/Byte;)I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendFirmwareRawData(
        JNIEnv *env, jclass obj, jlong ui32Size, jbyteArray pbyData);
/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendFirmwareUpgrade
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendFirmwareUpgrade(
        JNIEnv *env, jclass obj);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendCVFirmwareDownload
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendCVFirmwareDownload(
        JNIEnv *env, jclass obj, jlong ui32FileSize , jlong ui32CheckSum);
/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendCVFirmwareRawData
 * Signature: (J[Ljava/lang/Byte;)I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendCVFirmwareRawData(
        JNIEnv *env, jclass obj, jlong ui32Size, jbyteArray pbyData);
/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendCVFirmwareUpgrade
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendCVFirmwareUpgrade(
        JNIEnv *env, jclass obj, jlong ui32Area);
/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendVendorCmd
 * Signature: ([Ljava/lang/Byte;I)I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendVendorCmd
  (JNIEnv *, jclass, jbyteArray, jint);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamGetStatus
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamGetStatus
  (JNIEnv *, jclass);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamGetFileName
 * Signature: (I)[Ljava/lang/Byte;
 */
JNIEXPORT jstring JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamGetFileName
  (JNIEnv *, jclass, jint);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamGetFileTime
 * Signature: (I[Ljava/lang/Byte;)Z
 */
JNIEXPORT jboolean JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamGetFileTime
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamGetFileIndex
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamGetFileIndex
  (JNIEnv *, jclass, jint);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamGetFileSize
 * Signature: (I)I
 */
JNIEXPORT jlong JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamGetFileSize
  (JNIEnv *, jclass, jint);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamGetFileExt
 * Signature: (I)B
 */
JNIEXPORT jbyte JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamGetFileExt
  (JNIEnv *, jclass, jint);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamGetFileExtraInfo
 * Signature: (I)[Ljava/lang/Byte;
 */
JNIEXPORT jbyteArray JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamGetFileExtraInfo
  (JNIEnv *, jclass, jint);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPClearCommandQueue
 * Signature: ()I
 */
JNIEXPORT void JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamClearCommandQueue
  (JNIEnv *, jclass);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSetFileNameMapping
 * Signature: ([Ljava/lang/Byte;)Z
 */
JNIEXPORT jboolean JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSetFileNameMapping
(JNIEnv *, jclass, jstring);
    
/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamCheckFileMapping
 * Signature: ()I
 */
JNIEXPORT void JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamCheckFileMapping
  (JNIEnv *, jclass);

/*
 * Class:     generalplus_GPCam_LibGPCam
 * Method:    GPCamSendGetFileByIndex
 * Signature: ()I
 */
JNIEXPORT void JNICALL Java_generalplus_com_GPCamLib_CamWrapper_GPCamSendGetFileByIndex
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
